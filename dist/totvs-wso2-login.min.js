/**
* @license TOTVS | HTML Framework 12.1.17-fix1
* (c) 2015-2017 TOTVS S/A https://www.totvs.com
* License: Comercial
*/

!function(){"use strict";angular.module("totvsWso2Config",["totvsWso2Oauth"])}(),function(){"use strict";angular.module("totvsWso2Interceptor",["totvsWso2Oauth"])}(),function(){"use strict";angular.module("totvsWso2Login",["totvsWso2Oauth","totvsWso2Config","totvsWso2Interceptor"])}(),function(){"use strict";angular.module("totvsWso2Oauth",["ngCookies"])}(),function(){"use strict";function t(t,o,e){n.redirectUrl&&e.getAccessToken()}angular.module("totvsWso2Oauth").provider("TotvsWso2Oauth",function(){function t(t,r,s){function c(){return t.totvsWso2Token}function i(){return t.totvsWso2Type}return{getAccessToken:function(){"/totvsWso2Token"!==s.path()&&e&&(e=!1,n.redirectUrl?r.put("totvsWso2Redirect",n.redirectUrl):r.put("totvsWso2Redirect",window.location.href),window.location.replace(o))},getAuthorizationHeader:function(){var t=null;return c()&&i()&&(t=i()+" "+c()),console.log("WSO2 authorization header:"+t),t},setAccessToken:function(t){angular.isString(t)&&(r.put("totvsWso2Token",t),console.log("WSO2 access token: "+t))},setTokenType:function(t){angular.isString(t)&&(r.put("totvsWso2Type",t),console.log("WSO2 token type: "+t))},getUrl:function(){return r.get("totvsWso2Redirect")}}}this.configure=function(t){angular.extend(n,t),"/"===n.baseUrl.substr(-1)&&(n.baseUrl=n.baseUrl.slice(0,-1)),n.callbackUrl||(n.callbackUrl=$("base")[0].href+"totvsWso2Token"),o=n.baseUrl+"/oauth2/authorize?response_type=token&client_id="+n.clientId+"&redirect_uri="+n.callbackUrl,console.log("WSO2 redirect URI: "+o)},this.$get=t,t.$inject=["$cookies","$cookieStore","$location"]}).run(t);var o,e=!0,n={baseUrl:"",clientId:"",callbackUrl:null};t.$inject=["$cookies","$cookieStore","TotvsWso2Oauth"]}(),function(){"use strict";function t(t,o,e,n){function r(t,o){var e,n,r,s,c,i=t.search();if(i.access_token)n=i.access_token,r=i.token_type;else for(i=t.hash().split("&"),e=0;e<i.length;e++)if((c=i[e].split("=")).length>1)switch(c[0]){case"access_token":n=c[1];break;case"token_type":r=c[1]}return n&&r&&(o.setAccessToken(n),o.setTokenType(r),s=o.getUrl()),s}t.interceptors.push("totvsWso2Interceptor"),o.state({name:"totvsWso2Token",url:"/totvsWso2Token",resolve:{redirectUrl:r},controller:function(t,o){o&&window.location.replace(o)}}),r.$inject=["$location","TotvsWso2Oauth"]}angular.module("totvsWso2Config").config(t),t.$inject=["$httpProvider","$stateProvider","$urlRouterProvider","$locationProvider"]}(),function(){"use strict";function t(t,o,e){return{request:function(t){return t.headers=t.headers||{},!t.headers.hasOwnProperty("Authorization")&&e.getAuthorizationHeader()&&(t.headers.Authorization=e.getAuthorizationHeader()),t},responseError:function(t){return 401===t.status&&e.getAccessToken(),o.reject(t)},response:function(t){return t},requestError:function(t){return o.reject(t)}}}angular.module("totvsWso2Interceptor").factory("totvsWso2Interceptor",t),t.$inject=["$rootScope","$q","TotvsWso2Oauth"]}();